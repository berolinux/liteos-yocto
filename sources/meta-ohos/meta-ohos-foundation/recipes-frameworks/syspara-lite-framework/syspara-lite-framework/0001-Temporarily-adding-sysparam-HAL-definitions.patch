From ebb54134f8e20f09c6d9307d594210d1f683e531 Mon Sep 17 00:00:00 2001
From: Robert Drab <robert.drab@huawei.com>
Date: Fri, 11 Dec 2020 13:25:57 +0000
Subject: [PATCH] Temporarily adding sysparam HAL definitions

sysparam HAL functions are defined per target; it is yet to be
decided how to organize platform specific code should be kept

Upstream-Status: Inappropriate [other]
Signed-off-by: Robert Drab <robert.drab@huawei.com>
---
 parameter/src/parameter_common.c | 94 +++++++++++++++++++++++++++++++-
 1 file changed, 93 insertions(+), 1 deletion(-)

diff --git a/parameter/src/parameter_common.c b/parameter/src/parameter_common.c
index a61a623..061ca62 100755
--- a/parameter/src/parameter_common.c
+++ b/parameter/src/parameter_common.c
@@ -27,6 +27,98 @@ static char g_roBuildVerShow[] = {"OpenHarmony 1.0"};
 static char g_roSdkApiLevel[] = {"3"};
 static char g_roFirstApiLevel[] = {"1"};
 
+static const char OHOS_PRODUCT_TYPE[] = {"****"};
+static const char OHOS_MANUFACTURE[] = {"****"};
+static const char OHOS_BRAND[] = {"****"};
+static const char OHOS_MARKET_NAME[] = {"****"};
+static const char OHOS_PRODUCT_SERIES[] = {"****"};
+static const char OHOS_PRODUCT_MODEL[] = {"****"};
+static const char OHOS_SOFTWARE_MODEL[] = {"****"};
+static const char OHOS_HARDWARE_MODEL[] = {"****"};
+static const char OHOS_HARDWARE_PROFILE[] = {"aout:true,display:true"};
+static const char OHOS_BOOTLOADER_VERSION[] = {"bootloader"};
+static const char OHOS_SECURITY_PATCH_TAG[] = {"2020-09-01"};
+static const char OHOS_ABI_LIST[] = {"****"};
+static const char OHOS_SERIAL[] = {"1234567890"};  // provided by OEM.
+
+static char* HalGetSysParam(const char* paramType, size_t paramSize)
+{
+    char* param = (char*)malloc(paramSize);
+    if (param == NULL) {
+        return NULL;
+    }
+    if (strcpy_s(param, paramSize, paramType) != EOK) {
+        free(param);
+        return NULL;
+    }
+    return param;
+}
+
+char* HalGetProductType(void)
+{
+    return HalGetSysParam(OHOS_PRODUCT_TYPE, sizeof(OHOS_PRODUCT_TYPE));
+}
+
+char* HalGetManufacture(void)
+{
+    return HalGetSysParam(OHOS_MANUFACTURE, sizeof(OHOS_MANUFACTURE));
+}
+
+char* HalGetBrand(void)
+{
+    return HalGetSysParam(OHOS_BRAND, sizeof(OHOS_BRAND));
+}
+
+char* HalGetMarketName(void)
+{
+    return HalGetSysParam(OHOS_MARKET_NAME, sizeof(OHOS_MARKET_NAME));
+}
+
+char* HalGetProductSeries(void)
+{
+    return HalGetSysParam(OHOS_PRODUCT_SERIES, sizeof(OHOS_PRODUCT_SERIES));
+}
+
+char* HalGetProductModel(void)
+{
+    return HalGetSysParam(OHOS_PRODUCT_MODEL, sizeof(OHOS_PRODUCT_MODEL));
+}
+
+char* HalGetSoftwareModel(void)
+{
+    return HalGetSysParam(OHOS_SOFTWARE_MODEL, sizeof(OHOS_SOFTWARE_MODEL));
+}
+
+char* HalGetHardwareModel(void)
+{
+    return HalGetSysParam(OHOS_HARDWARE_MODEL, sizeof(OHOS_HARDWARE_MODEL));
+}
+
+char* HalGetHardwareProfile(void)
+{
+    return HalGetSysParam(OHOS_HARDWARE_PROFILE, sizeof(OHOS_HARDWARE_PROFILE));
+}
+
+char* HalGetSerial(void)
+{
+    return HalGetSysParam(OHOS_SERIAL, sizeof(OHOS_SERIAL));
+}
+
+char* HalGetBootloaderVersion(void)
+{
+    return HalGetSysParam(OHOS_BOOTLOADER_VERSION, sizeof(OHOS_BOOTLOADER_VERSION));
+}
+
+char* HalGetSecurityPatchTag(void)
+{
+    return HalGetSysParam(OHOS_SECURITY_PATCH_TAG, sizeof(OHOS_SECURITY_PATCH_TAG));
+}
+
+char* HalGetAbiList(void)
+{
+    return HalGetSysParam(OHOS_ABI_LIST, sizeof(OHOS_ABI_LIST));
+}
+
 static boolean IsValidValue(const char* value, unsigned int len)
 {
     if ((value == NULL) || !strlen(value) || (strlen(value) + 1 > len)) {
