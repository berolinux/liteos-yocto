From 919c1cd0a5950fd824e69ead93773c9658b9b971 Mon Sep 17 00:00:00 2001
From: Vincent Abriou <vincent.abriou@st.com>
Date: Fri, 6 Dec 2019 10:38:07 +0100
Subject: [PATCH 1/3] media: ov5640: reduce mipi rate according to maximum
 pixel clock frequency

Reduce mipi port rate according to maximum pixel clock frequency
admissible by camera interface.
This allows to support any resolutions/framerate requests by decreasing
the framerate according to maximum camera interface capabiliti

Inverts the order of the operation while calculing the pclk_freq.
Do the division before the multiplication to avoid u32 overflow.

Signed-off-by: Vincent Abriou <vincent.abriou@st.com>
---
 drivers/media/i2c/ov5640.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/media/i2c/ov5640.c b/drivers/media/i2c/ov5640.c
index 6a1b50bec..6c0feff63 100644
--- a/drivers/media/i2c/ov5640.c
+++ b/drivers/media/i2c/ov5640.c
@@ -942,8 +942,10 @@ static unsigned long ov5640_calc_sys_clk(struct ov5640_dev *sensor,
 static int ov5640_set_mipi_pclk(struct ov5640_dev *sensor,
 				unsigned long rate)
 {
+	struct i2c_client *client = sensor->i2c_client;
 	const struct ov5640_mode_info *mode = sensor->current_mode;
 	u8 prediv, mult, sysdiv;
+	unsigned long pclk_freq, max_pclk_freq;
 	u8 mipi_div;
 	int ret;
 
@@ -958,6 +960,19 @@ static int ov5640_set_mipi_pclk(struct ov5640_dev *sensor,
 	else
 		mipi_div = OV5640_MIPI_DIV_PCLK;
 
+	pclk_freq = rate / 16 / mipi_div;
+	pclk_freq = pclk_freq * 2 * /* 2 clocks per pixel */
+		    sensor->ep.bus.mipi_csi2.num_data_lanes;
+	max_pclk_freq = sensor->ep.bus.mipi_csi2.pclk_max_frequency;
+	/* clip rate according to optional maximum pixel clock limit */
+	if (max_pclk_freq && (pclk_freq > max_pclk_freq)) {
+		rate = max_pclk_freq / sensor->ep.bus.mipi_csi2.num_data_lanes
+		       / 2;
+		rate = rate * mipi_div * 16;
+		dev_dbg(&client->dev, "MIPI pixel clock too high (%lu > %lu Hz), reducing rate...\n",
+			pclk_freq, max_pclk_freq);
+	}
+
 	ov5640_calc_sys_clk(sensor, rate, &prediv, &mult, &sysdiv);
 
 	ret = ov5640_mod_reg(sensor, OV5640_REG_SC_PLL_CTRL0,
-- 
2.17.1

